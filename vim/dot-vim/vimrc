" Paul Heely
set nocompatible

let g:pmh#drafts_dir=$DRAFTS_DIR

" Use minpac for package management
packadd minpac
call minpac#init()

" minpac packages, including itself so it can be updated
call minpac#add('k-takata/minpac', {'type': 'opt'})

" use fzf for search, reauires external tools fzf and ripgrep
call minpac#add('junegunn/fzf')

" make sense of our todo.txt todos
call minpac#add('freitass/todo.txt-vim')

" make a nice modeline and git config
call minpac#add('vim-airline/vim-airline')
call minpac#add('tpope/vim-fugitive')
call minpac#add('mhinz/vim-signify')

" format and lint files
call minpac#add('dense-analysis/ale')

" color schemes
call minpac#add('morhetz/gruvbox')

" get some automated bullet (re)numbering in various modes
call minpac#add('dkarter/bullets.vim')

" minpac commands
command! PackUpdate call minpac#update()
command! PackClean call minpac#clean()
command! PackStatus call minpac#status()


" ALE config
" see the associated ftplugin folders for program associations
let g:ale_fix_on_save = 1


" launch fzf fuzzy serach
nnoremap <C-p> :<C-u>FZF<CR>

" make it easy to edit and source my vim config
" use the acttual path to the file instead of $MYVIMRC
" because I'm using the same config for both Vim and NeoVim
nnoremap <leader>ev :vsplit ~/.vim/vimrc<CR>
nnoremap <leader>sv :source ~/.vim/vimrc<CR>

" some shortcuts for files I often want to visit
nnoremap <leader>et :vsplit $DRAFTS_DIR/todo.txt<CR>


" disalbe highlight when <leader><CR> is pressed
map <silent> <leader><CR> :noh<CR>

" toggle screen centering on and off
nnoremap <leader>zz :let &scrolloff=999-&scrolloff<CR>



set number
set tabstop=2
set shiftwidth=2
set expandtab
set termguicolors
set textwidth=80
set wrap

" configure async update for signify
set updatetime=100


syntax enable
set background=dark
colorscheme gruvbox
filetype plugin indent on

" I want to be able to open today's daily jornal file. The date in the
" filename must be generated everytime in case my session has been open
" overnight
function! OpenDailyJournal()
        let l:yymmdd=strftime('%y%m%d')
        let l:dj=g:pmh#drafts_dir . "/" . yymmdd . "-Daily_Journal.md"
        execute "split" l:dj
endfunction

" and map it to a convenitent key combo
nnoremap <leader>ed :call OpenDailyJournal()<CR>

" pandoc conversion to different formats
nnoremap <leader>pd :!pandoc % -o ~/Documents/Docs/_Inbox/%:t:r.docx<CR>
nnoremap <leader>pp :!pandoc % -V geometry:margin=1in -o ~/Documents/Docs/_Inbox/%:t:r.pdf<CR>
nnoremap <leader>ph :!pandoc % -o ~/Documents/Docs/_Inbox/%:t:r.html<CR>

" print a nice startup message
echo ">^.^<"

